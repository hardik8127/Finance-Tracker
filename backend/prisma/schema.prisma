// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExpenseList {
  Food
  Travel
  Entertainment
  Shopping
  Bills
  Healthcare
  Others
}

model User {
  id                   String    @id @default(uuid())
  name                 String?
  email                String    @unique
  image                String?
  password             String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @default(now())
  isVerified           Boolean   @default(false)
  verificationToken    String?
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  googleId             String?   @unique

  expense Expense[]
  budgets Budget[]
}

model Expense {
  id          String      @id @default(uuid())
  userId      String
  amount      Decimal     @db.Decimal(10, 2) 
  category    ExpenseList
  description String?     
  date        DateTime    @default(now()) 
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId]) 
  @@index([date])   
  @@index([category]) 
}

model Budget {
  id        String      @id @default(uuid())
  userId    String
  category  ExpenseList
  amount    Decimal     @db.Decimal(10, 2)
  month     Int         // 1-12
  year      Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, category, month, year])
  @@index([userId])
}
